plugins {
    id 'fabric-loom' version '1.5-SNAPSHOT'
	id 'maven-publish'
	id 'org.ajoberstar.grgit' version '4.1.0'
}

version = "$mod_version+$minecraft_version"
group = project.maven_group

def getVersionMetadata() {
    // CI builds version numbers
    def build_id = System.getenv("RELEASE_NUMBER")
    if (build_id != null) {
        return build_id + ".0.0"
    }

    // Development builds
    if (grgit == null) {
        return "dev"
    }

    // Named development builds
    def id = grgit.head().abbreviatedId
    if (!grgit.status().clean) {
        id += "-dirty"
    }

    return "rev.${id}"
}

base {
    archivesName = archives_name
}

repositories {
	// Add repositories to retrieve artifacts from in here.
	// You should only use this when depending on other mods because
	// Loom adds the essential maven repositories to download Minecraft and libraries from automatically.
	// See https://docs.grad........................le.org/current/userguide/declaring_repositories.html
	// for more information about repositories.
    maven { url "https://jitpack.io" }
}
loom {
	accessWidenerPath = file("src/main/resources/worldpreview.accesswidener")
}
dependencies {
    minecraft "com.mojang:minecraft:$minecraft_version"
    mappings "net.fabricmc:yarn:$yarn_mappings:v2"
    modImplementation "net.fabricmc:fabric-loader:$loader_version"
    implementation "dev.tildejustin.state-output:state-output-common:v1.1.6"
}

processResources {
    filesMatching("fabric.mod.json") {
        expand "version": version
    }
}


tasks.withType(JavaCompile).configureEach {
	// ensure that the encoding is set to UTF-8, no matter what the system default is
	// this fixes some edge cases with special characters not displaying correctly
	// see http://yodaconditions.net/blog/fix-for-java-file-encoding-problems-with-gradle.html
	// If Javadoc is generated, this must be specified in that task too.
	it.options.encoding = "UTF-8"

	it.options.release = 8
}

java {
    sourceCompatibility = targetCompatibility = JavaVersion.VERSION_1_8
}

jar {
	from("LICENSE") {
		rename { "${it}_${base.archivesName.get()}"}
	}
}


publishing {
    publications.create("mavenJava", MavenPublication) {
        from components.java
	}
    repositories {}
}
