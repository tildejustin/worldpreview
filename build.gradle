plugins {
	id 'fabric-loom' version "1.7-SNAPSHOT"
	id 'legacy-looming' version "1.7-SNAPSHOT" // Version must be the same as fabric-loom's
	id 'maven-publish'
}

version = "${project.mod_version}+${project.minecraft_version}"
group = project.maven_group

base {
	archivesName = project.archives_name
}

repositories {
	maven { url 'https://jitpack.io' }
}

dependencies {
	minecraft "com.mojang:minecraft:${project.minecraft_version}"
	mappings "net.legacyfabric:yarn:${project.yarn_mappings}:v2"
	modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"
	implementation "dev.tildejustin.state-output:state-output-common:$state_output_version"
	compileOnlyApi files("libs/atum-1.1.3+1.8.9.jar")
}

processResources {
	inputs.property "mod_id", project.mod_id
	inputs.property "version", project.version

	filesMatching("fabric.mod.json") {
		expand "mod_id": project.mod_id, "version": project.version
	}
}

// ensure that the encoding is set to UTF-8, no matter what the system default is
// this fixes some edge cases with special characters not displaying correctly
// see http://yodaconditions.net/blog/fix-for-java-file-encoding-problems-with-gradle.html
tasks.withType(JavaCompile).configureEach {
	it.options.encoding = "UTF-8"
	if (JavaVersion.current().isJava9Compatible()) it.options.release = 8
}

java {
	// Loom will automatically attach sourcesJar to a RemapSourcesJar task and to the "build" task
	// if it is present.
	// If you remove this line, sources will not be generated.
	withSourcesJar()
    sourceCompatibility = JavaVersion.VERSION_1_8
    targetCompatibility = JavaVersion.VERSION_1_8
}

jar {
	from("LICENSE") {
		rename { "${it}_${project.base.archivesName.get()}" }
	}
}

// configure the maven publication
publishing {
	publications {
		mavenJava(MavenPublication) {
			from components.java
		}
	}

	// select the repositories you want to publish to
	repositories {
		// uncomment to publish to the local maven
		// mavenLocal()
	}
}
